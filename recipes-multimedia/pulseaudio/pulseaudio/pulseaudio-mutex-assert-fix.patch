diff -urNp pulseaudio-5.0.orig/src/pulsecore/mutex-posix.c pulseaudio-5.0/src/pulsecore/mutex-posix.c
--- pulseaudio-5.0.orig/src/pulsecore/mutex-posix.c	2014-05-12 14:16:01.269803128 +0200
+++ pulseaudio-5.0/src/pulsecore/mutex-posix.c	2014-05-12 14:16:37.949801822 +0200
@@ -42,28 +42,15 @@ struct pa_cond {
 pa_mutex* pa_mutex_new(bool recursive, bool inherit_priority) {
     pa_mutex *m;
     pthread_mutexattr_t attr;
-#ifdef HAVE_PTHREAD_PRIO_INHERIT
     int r;
-#endif
 
     pa_assert_se(pthread_mutexattr_init(&attr) == 0);
 
     if (recursive)
         pa_assert_se(pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_RECURSIVE) == 0);
 
-#ifdef HAVE_PTHREAD_PRIO_INHERIT
-    if (inherit_priority) {
-        r = pthread_mutexattr_setprotocol(&attr, PTHREAD_PRIO_INHERIT);
-        pa_assert(r == 0 || r == ENOTSUP);
-    }
-#endif
-
     m = pa_xnew(pa_mutex, 1);
 
-#ifndef HAVE_PTHREAD_PRIO_INHERIT
-    pa_assert_se(pthread_mutex_init(&m->mutex, &attr) == 0);
-
-#else
     if ((r = pthread_mutex_init(&m->mutex, &attr))) {
 
         /* If this failed, then this was probably due to non-available
@@ -74,7 +61,6 @@ pa_mutex* pa_mutex_new(bool recursive, b
         pa_assert_se(pthread_mutexattr_setprotocol(&attr, PTHREAD_PRIO_NONE) == 0);
         pa_assert_se(pthread_mutex_init(&m->mutex, &attr) == 0);
     }
-#endif
 
     return m;
 }
